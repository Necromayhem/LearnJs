// –ó–∞–¥–∞—á–∏ –æ—Ç deepseek

// 1. –ë—Ä–∞—É–∑–µ—Ä–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
// üîπ –ó–∞–¥–∞—á–∏:

// –í—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±—ä–µ–∫—Ç window –∏ –Ω–∞–π–¥–∏ –≤ –Ω—ë–º:

// document

// navigator.userAgent (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ)

// location.href (URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã)

// console.log(window)
// console.log(window.document)
// console.log(window.navigator.userAgent)
// console.log(window.location)

// 2. DOM-–¥–µ—Ä–µ–≤–æ
// üîπ –ó–∞–¥–∞—á–∏:
//  –°–æ–∑–¥–∞–π –ø—Ä–æ—Å—Ç–æ–π HTML-–¥–æ–∫—É–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º DOM:

// <html>
//   <body>
//     <div id="root" class="main" >–ü—Ä–∏–≤–µ—Ç, <b>DOM</b>!</div>
//   </body>
// </html>

const body = document.body
const div = document.createElement('div') // —Å–æ–∑–¥–∞–ª div
div.classList.add('main') // –¥–æ–±–∞–≤–∏–ª –∫–ª–∞—Å—Å
div.id = 'root' // –¥–æ–±–∞–≤–∏–ª id
div.innerHTML = '–ü—Ä–∏–≤–µ—Ç, <b>DOM</b>!' // –ø–æ–º–µ—Å—Ç–∏–ª –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ html
body.append(div) // –ø–æ–º–µ—Å—Ç–∏–ª –≤ body div

// 3. –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ DOM-—ç–ª–µ–º–µ–Ω—Ç–∞–º
// üîπ –ó–∞–¥–∞—á–∏:
//  –î–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ <div id="root"> –∏–∑ –∑–∞–¥–∞—á–∏ 3 –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å:

// –ï–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è (parentNode).

// –ü–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—á–µ—Ä–Ω–∏–π —É–∑–ª—ã (firstChild, lastChild).

// –°–æ—Å–µ–¥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å nextSibling –∏–ª–∏ previousSibling).

// –ü–µ—Ä–µ–±–µ—Ä–∏ –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã <div id="root"> –∏ –≤—ã–≤–µ–¥–∏ –∏—Ö —Ç–∏–ø—ã (nodeType).

console.log(div.parentNode) // body
console.log(div.firstChild, div.lastChild) // –ü—Ä–∏–≤–µ—Ç, | !
console.log(div.nextSibling, div.previousSibling) // null | #text(–ø–µ—Ä–µ–Ω–æ—Å—ã/–ø—Ä–æ–±–µ–ª—ã –¥–æ div)
for (const elem of div.childNodes) {
	console.log([elem, elem.nodeType])
} // [text, 3], [b, 1], [text, 3]

// 4. –ü–æ–∏—Å–∫: getElement, querySelector
// üîπ –ó–∞–¥–∞—á–∏:
// –ù–∞–π–¥–∏ —ç–ª–µ–º–µ–Ω—Ç <div id="root"> —Ç—Ä–µ–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:

// getElementById

// querySelector

// querySelectorAll

// –ù–∞–π–¥–∏ –≤—Å–µ <b> —Ç–µ–≥–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –≤—ã–≤–µ–¥–∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.

console.log(document.getElementById('root')) // div#root.main
console.log(document.body.querySelector('div')) // div#root.main
console.log(body.querySelectorAll('div')) // NodeList¬†[div#root.main]
console.log(body.querySelectorAll('b').length) // 1

// 5. –°–≤–æ–π—Å—Ç–≤–∞ —É–∑–ª–æ–≤: —Ç–∏–ø, —Ç–µ–≥ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
// üîπ –ó–∞–¥–∞—á–∏:
// –î–ª—è <div id="root"> –≤—ã–≤–µ–¥–∏:

// –ï–≥–æ —Ç–∏–ø (nodeType).

// –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞ (tagName).

// –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (textContent –∏ innerText ‚Äî –≤ —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞?).

// –°–æ–∑–¥–∞–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª (document.createTextNode) –∏ –¥–æ–±–∞–≤—å –µ–≥–æ –≤ <div id="root">.

console.log(div.nodeType) // 1
console.log(div.textContent) // –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å/—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
console.log(div.innerText) // –ü–æ–∫–∞–∂–µ—Ç —Ç–µ–∫—Å—Ç –∫–∞–∫ –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

const text_node = document.createTextNode('test')
body.append(text_node)

// 6. –ê—Ç—Ä–∏–±—É—Ç—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞
// üîπ –ó–∞–¥–∞—á–∏:
//  –î–ª—è <div id="root"> —Å–¥–µ–ª–∞–π:
// - –î–æ–±–∞–≤—å –∞—Ç—Ä–∏–±—É—Ç data-info="test".
// - –ü—Ä–æ–≤–µ—Ä—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ getAttribute –∏ —á–µ—Ä–µ–∑ —Å–≤–æ–π—Å—Ç–≤–æ dataset.
// - –£–¥–∞–ª–∏ –∞—Ç—Ä–∏–±—É—Ç.

div.setAttribute('data-info', 'test')
console.log(div.getAttribute('data-info')) // test
console.log(div.dataset.info) // test
div.removeAttribute('data-info')
// delete div.dataset.info
console.log(div.dataset.info) // undefined

// 7. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
// üîπ –ó–∞–¥–∞—á–∏:
// –°–æ–∑–¥–∞–π –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç <p> —Å —Ç–µ–∫—Å—Ç–æ–º "–ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç" –∏ –¥–æ–±–∞–≤—å –µ–≥–æ –≤ –∫–æ–Ω–µ—Ü <body>.
// –£–¥–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç <b> –∏–∑ <div id="root">.
// –°–∫–ª–æ–Ω–∏—Ä—É–π <div id="root"> (cloneNode) –∏ –≤—Å—Ç–∞–≤—å –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º.

const p = (document.createElement('p').textContent = '–ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç')
body.append(p)
body.querySelector('b').remove()
const div_clone = div.cloneNode(true)
console.log(div_clone)
div.insertAdjacentElement('beforebegin', div_clone)

// 8. –°—Ç–∏–ª–∏ –∏ –∫–ª–∞—Å—Å—ã
// üîπ –ó–∞–¥–∞—á–∏:
// –î–ª—è <div id="root"> —Å–¥–µ–ª–∞–π:
// –ò–∑–º–µ–Ω–∏ —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π —á–µ—Ä–µ–∑ style.color.
// –î–æ–±–∞–≤—å –∫–ª–∞—Å—Å .active —Å –∂—ë–ª—Ç—ã–º —Ñ–æ–Ω–æ–º (CSS) —á–µ—Ä–µ–∑ classList.add.
// –ü–µ—Ä–µ–∫–ª—é—á–∏ –∫–ª–∞—Å—Å (–µ—Å–ª–∏ –µ—Å—Ç—å ‚Äî —É–¥–∞–ª–∏, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤—å).
// –°–æ–∑–¥–∞–π —ç–ª–µ–º–µ–Ω—Ç <div> —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ 100x100px –∏ —á—ë—Ä–Ω–æ–π —Ä–∞–º–∫–æ–π (–∏—Å–ø–æ–ª—å–∑—É–π style.cssText).

div.style.color = 'red'
div.classList.remove('main')
div.classList.add('active')
div.style.backgroundColor = 'yellow'
document.body
	.querySelectorAll('div')
	.forEach(elem => (elem.style.backgroundColor = 'green'))
div.classList.toggle('active')

const square = document.createElement('div')
square.style.cssText =
	'width: 100px; height: 100px; background-color: red; border: 2px black solid '
body.append(square)
