// // Напишите рекурсивную функцию для вычисления суммы чисел от 1 до n.

// function sum(n) {
//   if(n === 0) return 0
//   return n + sum(n - 1)
// }

// console.log(sum(10)); // 55

// // Примеры:
// sum(5) // Ожидаемый результат: 15
// sum(10) // Ожидаемый результат: 55

// Создайте рекурсивную функцию для подсчета количества цифр в числе.

// function countDigits(num) {
//   if(num < 10) return 1
//   return 1 + countDigits(num/10)
// }

// console.log(countDigits(1000)); // 4

// Примеры:
// countDigits(123) // Ожидаемый результат: 3
// countDigits(9876543210) // Ожидаемый результат: 10

// Напишите рекурсивную функцию для нахождения наибольшего общего делителя (НОД) двух чисел.

// function gcd(a, b) {
//     if (b === 0) {
//     return a;
//     }

//     return gcd(b, a % b);
// }

// console.log(gcd(100, 75)); // 25

// Примеры:
// gcd(48, 18) // Ожидаемый результат: 6
// gcd(100, 75) // Ожидаемый результат: 25

// Реализуйте рекурсивную функцию для вычисления факториала числа.

// function factorial(n) {
//   if(n === 0) return 1
//   return n*factorial(n - 1)
// }

// console.log(factorial(5)); // 120

// Примеры:
// factorial(5) // Ожидаемый результат: 120
// factorial(0) // Ожидаемый результат: 1

// Создайте рекурсивную функцию для обращения строки.

function reverseString(str) {
  
}

// Примеры:
// reverseString("hello") // Ожидаемый результат: "olleh"
// reverseString("JavaScript") // Ожидаемый результат: "tpircSavaJ"

// Эти задачи помогут закрепить понимание рекурсии в JavaScript.
// Вот еще 5 задач на рекурсию в JavaScript:

// Напишите рекурсивную функцию для вычисления n-го числа Фибоначчи.

// function fibonacci(n) {
//   // Ваш код здесь
// }

// Примеры:
// fibonacci(7) // Ожидаемый результат: 13
// fibonacci(10) // Ожидаемый результат: 55

// Создайте рекурсивную функцию для проверки, является ли строка палиндромом.

// function isPalindrome(str) {
//   // Ваш код здесь
// }

// Примеры:
// isPalindrome("racecar") // Ожидаемый результат: true
// isPalindrome("hello") // Ожидаемый результат: false

// Реализуйте рекурсивную функцию для возведения числа в степень.

// function power(base, exponent) {
//   // Ваш код здесь
// }

// Примеры:
// power(2, 3) // Ожидаемый результат: 8
// power(5, 2) // Ожидаемый результат: 25

// Напишите рекурсивную функцию для нахождения суммы элементов массива.

// function arraySum(arr) {
//   // Ваш код здесь
// }

// Примеры:
// arraySum([1, 2, 3, 4, 5]) // Ожидаемый результат: 15
// arraySum([10, -5, 7, 8]) // Ожидаемый результат: 20

// Создайте рекурсивную функцию для поиска максимального элемента в массиве.

// function findMax(arr) {
//   // Ваш код здесь
// }

// Примеры:
// findMax([1, 5, 3, 9, 2]) // Ожидаемый результат: 9
// findMax([-1, -5, -3, -9, -2]) // Ожидаемый результат: -1

// Эти задачи помогут дополнительно закрепить понимание рекурсии в JavaScript.