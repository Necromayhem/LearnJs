"use strict"

// 7 глава

// ### Задача 1: Работа с дескрипторами свойств
// Создай объект person с двумя свойствами: firstName и lastName. Убедись, что оба свойства не могут быть изменены (используй флаг writable), а также не могут быть удалены (используй флаг configurable). Выведи объект в консоль.

// Подсказка: Используй Object.defineProperty() для определения свойств.

let person = {
    firstName: "Alex",
    lastName: "Ivanov"
};

Object.defineProperties(person,{
    firstName: {writable: false, configurable: false},
    lastName: {writable: false, configurable: false},
});

// person.firstName = "Egor"; // TypeError
// person.lastName = "Voronov"; // TypeError

// delete person.firstName // TypeError
// delete person.lastName // TypeError




// ### Задача 2: Геттер и сеттер
// Создай объект rectangle с двумя свойствами: width и height. Добавь к объекту геттер и сеттер для свойства area. Геттер должен возвращать площадь прямоугольника (width * height), а сеттер должен принимать площадь и соответственно вычислять ширину и высоту (предполагая, что ширина всегда меньше высоты).

let rectangle = {
    width: 10,
    height: 15,

    get area(){
        return this.width*this.height
    },

    set area(value){

    }
}

console.log(rectangle.area); // 150


// ### Задача 3: Наследование и сеттеры
// Создай родительский класс Animal с методом speak, который возвращает строку "Я животное".
// Создай дочерний класс Dog, который наследует от Animal и переопределяет метод speak, чтобы возвращать "Я собака". Используй сеттер для свойства name, что бы устанавливать имя собаки, и геттер для его получения.

// ### Задача 4: Дескрипторы для объектов
// Создай объект car и добавь к нему два свойства: brand и model. Используя дескрипторы свойств, сделай так, чтобы model можно было изменять, но brand был только для чтения. Выведи объект в консоль и покажи, как ты изменяешь model, а затем пытаешься изменить brand.

// ### Задача 5: Флаги дескрипторов
// Определи объект counter, который будет иметь одно свойство count с начальным значением 0. Добавь к объекту метод increment, который будет увеличивать значение count. Сделай так, чтобы значение свойства count оставалось неизменным напрямую (используй флаг writable), и его можно было изменять только через метод increment.